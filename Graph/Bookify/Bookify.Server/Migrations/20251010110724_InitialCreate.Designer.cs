// <auto-generated />
using System;
using Bookify.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bookify.Server.Migrations
{
    [DbContext(typeof(BookifyDbContext))]
    [Migration("20251010110724_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bookify.Server.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BookedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("BookedByEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RoomId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Bookify.Server.Models.Room", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Amenities")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Amenities = "TV Screen,WiFi,Coffee",
                            Available = true,
                            Capacity = 8,
                            Floor = 2,
                            Name = "PIXEL PALACE"
                        },
                        new
                        {
                            Id = "2",
                            Amenities = "TV Screen,WiFi",
                            Available = true,
                            Capacity = 12,
                            Floor = 3,
                            Name = "8-BIT BOARDROOM"
                        },
                        new
                        {
                            Id = "3",
                            Amenities = "WiFi,Coffee",
                            Available = false,
                            Capacity = 6,
                            Floor = 2,
                            Name = "RETRO RETREAT"
                        },
                        new
                        {
                            Id = "4",
                            Amenities = "TV Screen,WiFi",
                            Available = true,
                            Capacity = 4,
                            Floor = 1,
                            Name = "ARCADE ARENA"
                        },
                        new
                        {
                            Id = "5",
                            Amenities = "TV Screen,WiFi,Coffee",
                            Available = true,
                            Capacity = 10,
                            Floor = 3,
                            Name = "SPRITE SUMMIT"
                        },
                        new
                        {
                            Id = "6",
                            Amenities = "WiFi",
                            Available = false,
                            Capacity = 6,
                            Floor = 1,
                            Name = "CONSOLE CHAMBER"
                        });
                });

            modelBuilder.Entity("Bookify.Server.Models.Booking", b =>
                {
                    b.HasOne("Bookify.Server.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Bookify.Server.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
