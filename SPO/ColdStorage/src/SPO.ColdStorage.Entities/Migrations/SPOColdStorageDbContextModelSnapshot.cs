// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPO.ColdStorage.Entities;

#nullable disable

namespace SPO.ColdStorage.Entities.Migrations
{
    [DbContext(typeof(SPOColdStorageDbContext))]
    partial class SPOColdStorageDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.File", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_modified");

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_modified_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.Property<int>("WebId")
                        .HasColumnType("int")
                        .HasColumnName("web_id");

                    b.HasKey("ID");

                    b.HasIndex("WebId");

                    b.ToTable("files");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.FileMigrationCompletedLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("file_id");

                    b.Property<DateTime>("Migrated")
                        .HasColumnType("datetime2")
                        .HasColumnName("migrated");

                    b.HasKey("ID");

                    b.HasIndex("FileId");

                    b.ToTable("file_migrations_completed");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.FileMigrationErrorLog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("error");

                    b.Property<int>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("file_id");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2")
                        .HasColumnName("timestamp");

                    b.HasKey("ID");

                    b.HasIndex("FileId");

                    b.ToTable("file_migration_errors");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.Site", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("ID");

                    b.ToTable("sites");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.TargetMigrationSite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FilterConfigJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("filter_config_json");

                    b.Property<string>("RootURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("root_url");

                    b.HasKey("ID");

                    b.ToTable("target_migration_sites");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.Web", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("url");

                    b.HasKey("ID");

                    b.HasIndex("SiteId");

                    b.ToTable("webs");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.File", b =>
                {
                    b.HasOne("SPO.ColdStorage.Entities.DBEntities.Web", "Web")
                        .WithMany()
                        .HasForeignKey("WebId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Web");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.FileMigrationCompletedLog", b =>
                {
                    b.HasOne("SPO.ColdStorage.Entities.DBEntities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.FileMigrationErrorLog", b =>
                {
                    b.HasOne("SPO.ColdStorage.Entities.DBEntities.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("File");
                });

            modelBuilder.Entity("SPO.ColdStorage.Entities.DBEntities.Web", b =>
                {
                    b.HasOne("SPO.ColdStorage.Entities.DBEntities.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Site");
                });
#pragma warning restore 612, 618
        }
    }
}
